{
  "{\"sourceRoot\":\"/Users/pravinmishra/dating/database/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/pravinmishra/dating\",\"filename\":\"/Users/pravinmishra/dating/database/tables.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/pravinmishra/dating\",\"plugins\":[],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/pravinmishra/dating/database/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/pravinmishra/dating",
      "filename": "/Users/pravinmishra/dating/database/tables.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/pravinmishra/dating",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/pravinmishra/dating/database/tables.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/pravinmishra/dating/database/tables.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/pravinmishra/dating/database/",
        "sourceFileName": "tables.js"
      }
    },
    "ast": null,
    "code": "const dbUtils = require(\"./sql.js\");\n\nconst pool = dbUtils.pool;\npool.on('connect', () => {\n  console.log('connected to the db');\n});\n\nconst createUserTable = () => {\n  const userCreateQuery = `CREATE TABLE IF NOT EXISTS users\n  (id SERIAL PRIMARY KEY, \n  email VARCHAR(100) UNIQUE NOT NULL, \n  name VARCHAR(100), \n  password VARCHAR(100) NOT NULL,\n  created_on DATE DEFAULT CURRENT_TIMESTAMP NOT NULL)`;\n  pool.query(userCreateQuery).then(res => {\n    console.log(res);\n    pool.end();\n  }).catch(err => {\n    console.log(err);\n    pool.end();\n  });\n};\n\nconst updateUserTable = () => {\n  const updateUserQuery = `\n              ALTER TABLE users ADD COLUMN image VARCHAR(255)`;\n  pool.query(updateUserQuery).then(res => {\n    console.log(res);\n    pool.end();\n  }).catch(err => {\n    console.log(err);\n    pool.end();\n  });\n};\n\nconst createTypes = () => {\n  const typeQuery = `CREATE TYPE operation AS ENUM ('LIKE', 'SUPERLIKE', 'BLOCK')`;\n  pool.query(typeQuery).then(res => {\n    console.log(res);\n    pool.end();\n  }).catch(err => {\n    console.log(err);\n    pool.end();\n  });\n};\n\nconst createInteractionTable = () => {\n  console.log(\"CalledInt++\");\n  const interactionQuery = `CREATE TABLE IF NOT EXISTS interactions\n  (id SERIAL PRIMARY KEY, \n  base_user INTEGER NOT NULL, \n  target_user INTEGER NOT NULL, \n  user_activity operation,\n  created_on DATE DEFAULT CURRENT_TIMESTAMP NOT NULL)`;\n  pool.query(interactionQuery).then(res => {\n    console.log(res);\n    pool.end();\n  }).catch(err => {\n    console.log(err);\n    pool.end();\n  });\n};\n\nconst createAllTables = () => {\n  createUserTable();\n  updateUserTable();\n  createTypes();\n  createInteractionTable();\n};\n\npool.on('remove', () => {\n  console.log('client removed');\n  process.exit(0);\n});\nmodule.exports = {\n  createAllTables\n};\n\nrequire('make-runnable');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxlcy5qcyJdLCJuYW1lcyI6WyJkYlV0aWxzIiwicmVxdWlyZSIsInBvb2wiLCJvbiIsImNvbnNvbGUiLCJsb2ciLCJjcmVhdGVVc2VyVGFibGUiLCJ1c2VyQ3JlYXRlUXVlcnkiLCJxdWVyeSIsInRoZW4iLCJyZXMiLCJlbmQiLCJjYXRjaCIsImVyciIsInVwZGF0ZVVzZXJUYWJsZSIsInVwZGF0ZVVzZXJRdWVyeSIsImNyZWF0ZVR5cGVzIiwidHlwZVF1ZXJ5IiwiY3JlYXRlSW50ZXJhY3Rpb25UYWJsZSIsImludGVyYWN0aW9uUXVlcnkiLCJjcmVhdGVBbGxUYWJsZXMiLCJwcm9jZXNzIiwiZXhpdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUNBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHRixPQUFPLENBQUNFLElBQXJCO0FBRUFBLElBQUksQ0FBQ0MsRUFBTCxDQUFRLFNBQVIsRUFBbUIsTUFBTTtBQUN2QkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkscUJBQVo7QUFDRCxDQUZEOztBQUtBLE1BQU1DLGVBQWUsR0FBRyxNQUFNO0FBQzVCLFFBQU1DLGVBQWUsR0FBSTs7Ozs7c0RBQXpCO0FBT0FMLEVBQUFBLElBQUksQ0FBQ00sS0FBTCxDQUFXRCxlQUFYLEVBQ0dFLElBREgsQ0FDU0MsR0FBRCxJQUFTO0FBQ2JOLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSyxHQUFaO0FBQ0FSLElBQUFBLElBQUksQ0FBQ1MsR0FBTDtBQUNELEdBSkgsRUFLR0MsS0FMSCxDQUtVQyxHQUFELElBQVM7QUFDZFQsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlRLEdBQVo7QUFDQVgsSUFBQUEsSUFBSSxDQUFDUyxHQUFMO0FBQ0QsR0FSSDtBQVNELENBakJEOztBQW1CQSxNQUFNRyxlQUFlLEdBQUcsTUFBTTtBQUM1QixRQUFNQyxlQUFlLEdBQUk7OERBQXpCO0FBR0FiLEVBQUFBLElBQUksQ0FBQ00sS0FBTCxDQUFXTyxlQUFYLEVBQ0dOLElBREgsQ0FDU0MsR0FBRCxJQUFTO0FBQ2JOLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSyxHQUFaO0FBQ0FSLElBQUFBLElBQUksQ0FBQ1MsR0FBTDtBQUNELEdBSkgsRUFLR0MsS0FMSCxDQUtVQyxHQUFELElBQVM7QUFDZFQsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlRLEdBQVo7QUFDQVgsSUFBQUEsSUFBSSxDQUFDUyxHQUFMO0FBQ0QsR0FSSDtBQVNELENBYkQ7O0FBaUJBLE1BQU1LLFdBQVcsR0FBRyxNQUFNO0FBQ3hCLFFBQU1DLFNBQVMsR0FBSSw4REFBbkI7QUFDQWYsRUFBQUEsSUFBSSxDQUFDTSxLQUFMLENBQVdTLFNBQVgsRUFDR1IsSUFESCxDQUNTQyxHQUFELElBQVM7QUFDYk4sSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlLLEdBQVo7QUFDQVIsSUFBQUEsSUFBSSxDQUFDUyxHQUFMO0FBQ0QsR0FKSCxFQUtHQyxLQUxILENBS1VDLEdBQUQsSUFBUztBQUNkVCxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVEsR0FBWjtBQUNBWCxJQUFBQSxJQUFJLENBQUNTLEdBQUw7QUFDRCxHQVJIO0FBU0QsQ0FYRDs7QUFjQSxNQUFNTyxzQkFBc0IsR0FBRyxNQUFNO0FBQ25DZCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxhQUFaO0FBQ0EsUUFBTWMsZ0JBQWdCLEdBQUk7Ozs7O3NEQUExQjtBQU9BakIsRUFBQUEsSUFBSSxDQUFDTSxLQUFMLENBQVdXLGdCQUFYLEVBQ0dWLElBREgsQ0FDU0MsR0FBRCxJQUFTO0FBQ2JOLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSyxHQUFaO0FBQ0FSLElBQUFBLElBQUksQ0FBQ1MsR0FBTDtBQUNELEdBSkgsRUFLR0MsS0FMSCxDQUtVQyxHQUFELElBQVM7QUFDZFQsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlRLEdBQVo7QUFDQVgsSUFBQUEsSUFBSSxDQUFDUyxHQUFMO0FBQ0QsR0FSSDtBQVNELENBbEJEOztBQTBCQSxNQUFNUyxlQUFlLEdBQUcsTUFBTTtBQUM1QmQsRUFBQUEsZUFBZTtBQUNmUSxFQUFBQSxlQUFlO0FBQ2ZFLEVBQUFBLFdBQVc7QUFDWEUsRUFBQUEsc0JBQXNCO0FBQ3ZCLENBTEQ7O0FBT0FoQixJQUFJLENBQUNDLEVBQUwsQ0FBUSxRQUFSLEVBQWtCLE1BQU07QUFDdEJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdCQUFaO0FBQ0FnQixFQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FBYSxDQUFiO0FBQ0QsQ0FIRDtBQUtBQyxNQUFNLENBQUNDLE9BQVAsR0FBa0I7QUFDaEJKLEVBQUFBO0FBRGdCLENBQWxCOztBQUlBbkIsT0FBTyxDQUFDLGVBQUQsQ0FBUCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcHJhdmlubWlzaHJhL2RhdGluZy9kYXRhYmFzZS8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmNvbnN0IGRiVXRpbHMgPSByZXF1aXJlKFwiLi9zcWwuanNcIik7XG5jb25zdCBwb29sID0gZGJVdGlscy5wb29sO1xuXG5wb29sLm9uKCdjb25uZWN0JywgKCkgPT4ge1xuICBjb25zb2xlLmxvZygnY29ubmVjdGVkIHRvIHRoZSBkYicpO1xufSk7XG5cblxuY29uc3QgY3JlYXRlVXNlclRhYmxlID0gKCkgPT4ge1xuICBjb25zdCB1c2VyQ3JlYXRlUXVlcnkgPSBgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgdXNlcnNcbiAgKGlkIFNFUklBTCBQUklNQVJZIEtFWSwgXG4gIGVtYWlsIFZBUkNIQVIoMTAwKSBVTklRVUUgTk9UIE5VTEwsIFxuICBuYW1lIFZBUkNIQVIoMTAwKSwgXG4gIHBhc3N3b3JkIFZBUkNIQVIoMTAwKSBOT1QgTlVMTCxcbiAgY3JlYXRlZF9vbiBEQVRFIERFRkFVTFQgQ1VSUkVOVF9USU1FU1RBTVAgTk9UIE5VTEwpYDtcblxuICBwb29sLnF1ZXJ5KHVzZXJDcmVhdGVRdWVyeSlcbiAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgcG9vbC5lbmQoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgcG9vbC5lbmQoKTtcbiAgICB9KTtcbn07XG5cbmNvbnN0IHVwZGF0ZVVzZXJUYWJsZSA9ICgpID0+IHtcbiAgY29uc3QgdXBkYXRlVXNlclF1ZXJ5ID0gYFxuICAgICAgICAgICAgICBBTFRFUiBUQUJMRSB1c2VycyBBREQgQ09MVU1OIGltYWdlIFZBUkNIQVIoMjU1KWA7XG4gIFxuICBwb29sLnF1ZXJ5KHVwZGF0ZVVzZXJRdWVyeSlcbiAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgcG9vbC5lbmQoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgcG9vbC5lbmQoKTtcbiAgICB9KTtcbn1cblxuXG5cbmNvbnN0IGNyZWF0ZVR5cGVzID0gKCkgPT4ge1xuICBjb25zdCB0eXBlUXVlcnkgPSBgQ1JFQVRFIFRZUEUgb3BlcmF0aW9uIEFTIEVOVU0gKCdMSUtFJywgJ1NVUEVSTElLRScsICdCTE9DSycpYDtcbiAgcG9vbC5xdWVyeSh0eXBlUXVlcnkpXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgIHBvb2wuZW5kKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIHBvb2wuZW5kKCk7XG4gICAgfSk7XG59XG5cblxuY29uc3QgY3JlYXRlSW50ZXJhY3Rpb25UYWJsZSA9ICgpID0+IHtcbiAgY29uc29sZS5sb2coXCJDYWxsZWRJbnQrK1wiKVxuICBjb25zdCBpbnRlcmFjdGlvblF1ZXJ5ID0gYENSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGludGVyYWN0aW9uc1xuICAoaWQgU0VSSUFMIFBSSU1BUlkgS0VZLCBcbiAgYmFzZV91c2VyIElOVEVHRVIgTk9UIE5VTEwsIFxuICB0YXJnZXRfdXNlciBJTlRFR0VSIE5PVCBOVUxMLCBcbiAgdXNlcl9hY3Rpdml0eSBvcGVyYXRpb24sXG4gIGNyZWF0ZWRfb24gREFURSBERUZBVUxUIENVUlJFTlRfVElNRVNUQU1QIE5PVCBOVUxMKWA7XG5cbiAgcG9vbC5xdWVyeShpbnRlcmFjdGlvblF1ZXJ5KVxuICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICBwb29sLmVuZCgpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICBwb29sLmVuZCgpO1xuICAgIH0pO1xufTtcblxuXG5cblxuXG5cblxuY29uc3QgY3JlYXRlQWxsVGFibGVzID0gKCkgPT4ge1xuICBjcmVhdGVVc2VyVGFibGUoKTtcbiAgdXBkYXRlVXNlclRhYmxlKCk7XG4gIGNyZWF0ZVR5cGVzKCk7XG4gIGNyZWF0ZUludGVyYWN0aW9uVGFibGUoKTtcbn07XG5cbnBvb2wub24oJ3JlbW92ZScsICgpID0+IHtcbiAgY29uc29sZS5sb2coJ2NsaWVudCByZW1vdmVkJyk7XG4gIHByb2Nlc3MuZXhpdCgwKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9ICB7XG4gIGNyZWF0ZUFsbFRhYmxlc1xufTtcblxucmVxdWlyZSgnbWFrZS1ydW5uYWJsZScpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "tables.js"
      ],
      "names": [
        "dbUtils",
        "require",
        "pool",
        "on",
        "console",
        "log",
        "createUserTable",
        "userCreateQuery",
        "query",
        "then",
        "res",
        "end",
        "catch",
        "err",
        "updateUserTable",
        "updateUserQuery",
        "createTypes",
        "typeQuery",
        "createInteractionTable",
        "interactionQuery",
        "createAllTables",
        "process",
        "exit",
        "module",
        "exports"
      ],
      "mappings": "AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMC,IAAI,GAAGF,OAAO,CAACE,IAArB;AAEAA,IAAI,CAACC,EAAL,CAAQ,SAAR,EAAmB,MAAM;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,CAFD;;AAKA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAMC,eAAe,GAAI;;;;;sDAAzB;AAOAL,EAAAA,IAAI,CAACM,KAAL,CAAWD,eAAX,EACGE,IADH,CACSC,GAAD,IAAS;AACbN,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAR,IAAAA,IAAI,CAACS,GAAL;AACD,GAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACAX,IAAAA,IAAI,CAACS,GAAL;AACD,GARH;AASD,CAjBD;;AAmBA,MAAMG,eAAe,GAAG,MAAM;AAC5B,QAAMC,eAAe,GAAI;8DAAzB;AAGAb,EAAAA,IAAI,CAACM,KAAL,CAAWO,eAAX,EACGN,IADH,CACSC,GAAD,IAAS;AACbN,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAR,IAAAA,IAAI,CAACS,GAAL;AACD,GAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACAX,IAAAA,IAAI,CAACS,GAAL;AACD,GARH;AASD,CAbD;;AAiBA,MAAMK,WAAW,GAAG,MAAM;AACxB,QAAMC,SAAS,GAAI,8DAAnB;AACAf,EAAAA,IAAI,CAACM,KAAL,CAAWS,SAAX,EACGR,IADH,CACSC,GAAD,IAAS;AACbN,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAR,IAAAA,IAAI,CAACS,GAAL;AACD,GAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACAX,IAAAA,IAAI,CAACS,GAAL;AACD,GARH;AASD,CAXD;;AAcA,MAAMO,sBAAsB,GAAG,MAAM;AACnCd,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,QAAMc,gBAAgB,GAAI;;;;;sDAA1B;AAOAjB,EAAAA,IAAI,CAACM,KAAL,CAAWW,gBAAX,EACGV,IADH,CACSC,GAAD,IAAS;AACbN,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAR,IAAAA,IAAI,CAACS,GAAL;AACD,GAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACAX,IAAAA,IAAI,CAACS,GAAL;AACD,GARH;AASD,CAlBD;;AA0BA,MAAMS,eAAe,GAAG,MAAM;AAC5Bd,EAAAA,eAAe;AACfQ,EAAAA,eAAe;AACfE,EAAAA,WAAW;AACXE,EAAAA,sBAAsB;AACvB,CALD;;AAOAhB,IAAI,CAACC,EAAL,CAAQ,QAAR,EAAkB,MAAM;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAgB,EAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD,CAHD;AAKAC,MAAM,CAACC,OAAP,GAAkB;AAChBJ,EAAAA;AADgB,CAAlB;;AAIAnB,OAAO,CAAC,eAAD,CAAP",
      "sourceRoot": "/Users/pravinmishra/dating/database/",
      "sourcesContent": [
        "\nconst dbUtils = require(\"./sql.js\");\nconst pool = dbUtils.pool;\n\npool.on('connect', () => {\n  console.log('connected to the db');\n});\n\n\nconst createUserTable = () => {\n  const userCreateQuery = `CREATE TABLE IF NOT EXISTS users\n  (id SERIAL PRIMARY KEY, \n  email VARCHAR(100) UNIQUE NOT NULL, \n  name VARCHAR(100), \n  password VARCHAR(100) NOT NULL,\n  created_on DATE DEFAULT CURRENT_TIMESTAMP NOT NULL)`;\n\n  pool.query(userCreateQuery)\n    .then((res) => {\n      console.log(res);\n      pool.end();\n    })\n    .catch((err) => {\n      console.log(err);\n      pool.end();\n    });\n};\n\nconst updateUserTable = () => {\n  const updateUserQuery = `\n              ALTER TABLE users ADD COLUMN image VARCHAR(255)`;\n  \n  pool.query(updateUserQuery)\n    .then((res) => {\n      console.log(res);\n      pool.end();\n    })\n    .catch((err) => {\n      console.log(err);\n      pool.end();\n    });\n}\n\n\n\nconst createTypes = () => {\n  const typeQuery = `CREATE TYPE operation AS ENUM ('LIKE', 'SUPERLIKE', 'BLOCK')`;\n  pool.query(typeQuery)\n    .then((res) => {\n      console.log(res);\n      pool.end();\n    })\n    .catch((err) => {\n      console.log(err);\n      pool.end();\n    });\n}\n\n\nconst createInteractionTable = () => {\n  console.log(\"CalledInt++\")\n  const interactionQuery = `CREATE TABLE IF NOT EXISTS interactions\n  (id SERIAL PRIMARY KEY, \n  base_user INTEGER NOT NULL, \n  target_user INTEGER NOT NULL, \n  user_activity operation,\n  created_on DATE DEFAULT CURRENT_TIMESTAMP NOT NULL)`;\n\n  pool.query(interactionQuery)\n    .then((res) => {\n      console.log(res);\n      pool.end();\n    })\n    .catch((err) => {\n      console.log(err);\n      pool.end();\n    });\n};\n\n\n\n\n\n\n\nconst createAllTables = () => {\n  createUserTable();\n  updateUserTable();\n  createTypes();\n  createInteractionTable();\n};\n\npool.on('remove', () => {\n  console.log('client removed');\n  process.exit(0);\n});\n\nmodule.exports =  {\n  createAllTables\n};\n\nrequire('make-runnable');"
      ]
    },
    "sourceType": "module",
    "mtime": 1590924032952
  },
  "{\"sourceRoot\":\"/Users/pravinmishra/dating/database/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/pravinmishra/dating\",\"filename\":\"/Users/pravinmishra/dating/database/sql.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/pravinmishra/dating\",\"plugins\":[],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/pravinmishra/dating/database/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/pravinmishra/dating",
      "filename": "/Users/pravinmishra/dating/database/sql.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/pravinmishra/dating",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/pravinmishra/dating/database/sql.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/pravinmishra/dating/database/sql.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/pravinmishra/dating/database/",
        "sourceFileName": "sql.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nconst Pool = require('pg').Pool;\n\nconst pool = new Pool({\n  user: 'root',\n  host: 'localhost',\n  database: 'dating_local',\n  password: 'Pravin@1996'\n});\n\nfunction sqlExecutor(req, res, statement, values, cb) {\n  pool.query(statement, values, function (err, results, field) {\n    if (err) {\n      cb(null, err);\n    } else {\n      cb(results, null);\n    }\n  });\n}\n\nfunction sqlExecutorAsync(req, res, statement, values) {\n  return new Promise((resolve, reject) => {\n    sqlExecutor(req, res, statement, values, (result, error) => {\n      if (error) {\n        console.log('====ERROR:===');\n        console.log(error);\n        return resolve({\n          status: 'error',\n          msg: 'Unexpected error occurred',\n          error\n        });\n      }\n\n      return resolve({\n        status: 'success',\n        data: result\n      });\n    });\n  });\n}\n\nmodule.exports = {\n  sqlExecutorAsync,\n  sqlExecutor,\n  pool\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNxbC5qcyJdLCJuYW1lcyI6WyJQb29sIiwicmVxdWlyZSIsInBvb2wiLCJ1c2VyIiwiaG9zdCIsImRhdGFiYXNlIiwicGFzc3dvcmQiLCJzcWxFeGVjdXRvciIsInJlcSIsInJlcyIsInN0YXRlbWVudCIsInZhbHVlcyIsImNiIiwicXVlcnkiLCJlcnIiLCJyZXN1bHRzIiwiZmllbGQiLCJzcWxFeGVjdXRvckFzeW5jIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJyZXN1bHQiLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJzdGF0dXMiLCJtc2ciLCJkYXRhIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQ0E7O0FBRUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsSUFBRCxDQUFQLENBQWNELElBQTNCOztBQUdBLE1BQU1FLElBQUksR0FBRyxJQUFJRixJQUFKLENBQVM7QUFDcEJHLEVBQUFBLElBQUksRUFBRSxNQURjO0FBRXBCQyxFQUFBQSxJQUFJLEVBQUUsV0FGYztBQUdwQkMsRUFBQUEsUUFBUSxFQUFFLGNBSFU7QUFJcEJDLEVBQUFBLFFBQVEsRUFBRTtBQUpVLENBQVQsQ0FBYjs7QUFPQSxTQUFTQyxXQUFULENBQXFCQyxHQUFyQixFQUEwQkMsR0FBMUIsRUFBK0JDLFNBQS9CLEVBQTBDQyxNQUExQyxFQUFrREMsRUFBbEQsRUFBc0Q7QUFDcERWLEVBQUFBLElBQUksQ0FBQ1csS0FBTCxDQUFZSCxTQUFaLEVBQXVCQyxNQUF2QixFQUNJLFVBQVVHLEdBQVYsRUFBZUMsT0FBZixFQUF3QkMsS0FBeEIsRUFBK0I7QUFDN0IsUUFBSUYsR0FBSixFQUFTO0FBQ1BGLE1BQUFBLEVBQUUsQ0FBQyxJQUFELEVBQU9FLEdBQVAsQ0FBRjtBQUNELEtBRkQsTUFFTztBQUNMRixNQUFBQSxFQUFFLENBQUNHLE9BQUQsRUFBVSxJQUFWLENBQUY7QUFDRDtBQUNGLEdBUEw7QUFRRDs7QUFFRCxTQUFTRSxnQkFBVCxDQUEwQlQsR0FBMUIsRUFBK0JDLEdBQS9CLEVBQW9DQyxTQUFwQyxFQUErQ0MsTUFBL0MsRUFBdUQ7QUFDckQsU0FBTyxJQUFJTyxPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ3RDYixJQUFBQSxXQUFXLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxTQUFYLEVBQXNCQyxNQUF0QixFQUE4QixDQUFDVSxNQUFELEVBQVNDLEtBQVQsS0FBbUI7QUFDMUQsVUFBSUEsS0FBSixFQUFXO0FBQ1RDLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGVBQVo7QUFDQUQsUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEtBQVo7QUFDQSxlQUFPSCxPQUFPLENBQUM7QUFBRU0sVUFBQUEsTUFBTSxFQUFFLE9BQVY7QUFBbUJDLFVBQUFBLEdBQUcsRUFBRSwyQkFBeEI7QUFBcURKLFVBQUFBO0FBQXJELFNBQUQsQ0FBZDtBQUNEOztBQUNELGFBQU9ILE9BQU8sQ0FBQztBQUFFTSxRQUFBQSxNQUFNLEVBQUUsU0FBVjtBQUFxQkUsUUFBQUEsSUFBSSxFQUFFTjtBQUEzQixPQUFELENBQWQ7QUFDRCxLQVBVLENBQVg7QUFRRCxHQVRNLENBQVA7QUFVRDs7QUFFRE8sTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZaLEVBQUFBLGdCQURlO0FBRWZWLEVBQUFBLFdBRmU7QUFHZkwsRUFBQUE7QUFIZSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcHJhdmlubWlzaHJhL2RhdGluZy9kYXRhYmFzZS8iLCJzb3VyY2VzQ29udGVudCI6WyJcbid1c2Ugc3RyaWN0J1xuXG5jb25zdCBQb29sID0gcmVxdWlyZSgncGcnKS5Qb29sXG5cblxuY29uc3QgcG9vbCA9IG5ldyBQb29sKHtcbiAgdXNlcjogJ3Jvb3QnLFxuICBob3N0OiAnbG9jYWxob3N0JyxcbiAgZGF0YWJhc2U6ICdkYXRpbmdfbG9jYWwnLFxuICBwYXNzd29yZDogJ1ByYXZpbkAxOTk2J1xufSlcblxuZnVuY3Rpb24gc3FsRXhlY3V0b3IocmVxLCByZXMsIHN0YXRlbWVudCwgdmFsdWVzLCBjYikge1xuICBwb29sLnF1ZXJ5KCBzdGF0ZW1lbnQsIHZhbHVlcyAsIFxuICAgICAgZnVuY3Rpb24gKGVyciwgcmVzdWx0cywgZmllbGQpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgIGNiKG51bGwsIGVycilcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjYihyZXN1bHRzLCBudWxsKVxuICAgICAgICB9XG4gICAgICB9KTtcbn1cblxuZnVuY3Rpb24gc3FsRXhlY3V0b3JBc3luYyhyZXEsIHJlcywgc3RhdGVtZW50LCB2YWx1ZXMpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBzcWxFeGVjdXRvcihyZXEsIHJlcywgc3RhdGVtZW50LCB2YWx1ZXMsIChyZXN1bHQsIGVycm9yKSA9PiB7XG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5sb2coJz09PT1FUlJPUjo9PT0nKVxuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcilcbiAgICAgICAgcmV0dXJuIHJlc29sdmUoeyBzdGF0dXM6ICdlcnJvcicsIG1zZzogJ1VuZXhwZWN0ZWQgZXJyb3Igb2NjdXJyZWQnLCBlcnJvciB9KVxuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc29sdmUoeyBzdGF0dXM6ICdzdWNjZXNzJywgZGF0YTogcmVzdWx0IH0pXG4gICAgfSlcbiAgfSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNxbEV4ZWN1dG9yQXN5bmMsXG4gIHNxbEV4ZWN1dG9yLFxuICBwb29sXG59XG5cblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "sql.js"
      ],
      "names": [
        "Pool",
        "require",
        "pool",
        "user",
        "host",
        "database",
        "password",
        "sqlExecutor",
        "req",
        "res",
        "statement",
        "values",
        "cb",
        "query",
        "err",
        "results",
        "field",
        "sqlExecutorAsync",
        "Promise",
        "resolve",
        "reject",
        "result",
        "error",
        "console",
        "log",
        "status",
        "msg",
        "data",
        "module",
        "exports"
      ],
      "mappings": "AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcD,IAA3B;;AAGA,MAAME,IAAI,GAAG,IAAIF,IAAJ,CAAS;AACpBG,EAAAA,IAAI,EAAE,MADc;AAEpBC,EAAAA,IAAI,EAAE,WAFc;AAGpBC,EAAAA,QAAQ,EAAE,cAHU;AAIpBC,EAAAA,QAAQ,EAAE;AAJU,CAAT,CAAb;;AAOA,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,SAA/B,EAA0CC,MAA1C,EAAkDC,EAAlD,EAAsD;AACpDV,EAAAA,IAAI,CAACW,KAAL,CAAYH,SAAZ,EAAuBC,MAAvB,EACI,UAAUG,GAAV,EAAeC,OAAf,EAAwBC,KAAxB,EAA+B;AAC7B,QAAIF,GAAJ,EAAS;AACPF,MAAAA,EAAE,CAAC,IAAD,EAAOE,GAAP,CAAF;AACD,KAFD,MAEO;AACLF,MAAAA,EAAE,CAACG,OAAD,EAAU,IAAV,CAAF;AACD;AACF,GAPL;AAQD;;AAED,SAASE,gBAAT,CAA0BT,GAA1B,EAA+BC,GAA/B,EAAoCC,SAApC,EAA+CC,MAA/C,EAAuD;AACrD,SAAO,IAAIO,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCb,IAAAA,WAAW,CAACC,GAAD,EAAMC,GAAN,EAAWC,SAAX,EAAsBC,MAAtB,EAA8B,CAACU,MAAD,EAASC,KAAT,KAAmB;AAC1D,UAAIA,KAAJ,EAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,eAAOH,OAAO,CAAC;AAAEM,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,GAAG,EAAE,2BAAxB;AAAqDJ,UAAAA;AAArD,SAAD,CAAd;AACD;;AACD,aAAOH,OAAO,CAAC;AAAEM,QAAAA,MAAM,EAAE,SAAV;AAAqBE,QAAAA,IAAI,EAAEN;AAA3B,OAAD,CAAd;AACD,KAPU,CAAX;AAQD,GATM,CAAP;AAUD;;AAEDO,MAAM,CAACC,OAAP,GAAiB;AACfZ,EAAAA,gBADe;AAEfV,EAAAA,WAFe;AAGfL,EAAAA;AAHe,CAAjB",
      "sourceRoot": "/Users/pravinmishra/dating/database/",
      "sourcesContent": [
        "\n'use strict'\n\nconst Pool = require('pg').Pool\n\n\nconst pool = new Pool({\n  user: 'root',\n  host: 'localhost',\n  database: 'dating_local',\n  password: 'Pravin@1996'\n})\n\nfunction sqlExecutor(req, res, statement, values, cb) {\n  pool.query( statement, values , \n      function (err, results, field) {\n        if (err) {\n          cb(null, err)\n        } else {\n          cb(results, null)\n        }\n      });\n}\n\nfunction sqlExecutorAsync(req, res, statement, values) {\n  return new Promise((resolve, reject) => {\n    sqlExecutor(req, res, statement, values, (result, error) => {\n      if (error) {\n        console.log('====ERROR:===')\n        console.log(error)\n        return resolve({ status: 'error', msg: 'Unexpected error occurred', error })\n      }\n      return resolve({ status: 'success', data: result })\n    })\n  })\n}\n\nmodule.exports = {\n  sqlExecutorAsync,\n  sqlExecutor,\n  pool\n}\n\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1590908511609
  }
}